include_directories(${CMAKE_SOURCE_DIR}/src/C++/common)
add_compile_options(-Wall -Wextra -pedantic -Werror)

add_executable(std_thread_cpp std_thread.cpp)
target_link_libraries (std_thread_cpp pthread)
add_dependencies (tests std_thread_cpp)
add_test (NAME test_std_thread_cpp COMMAND std_thread_cpp)

add_executable(std_thread_inst_cpp std_thread.cpp)
if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
    target_compile_options(std_thread_inst_cpp PRIVATE "-finstrument-functions finstrument-functions-exclude-file-list=*.h,*.hpp finstrument-functions-exclude-function-list=std::")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Intel")
    target_compile_options(std_thread_inst_cpp PRIVATE "-finstrument-functions")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
    target_compile_options(std_thread_inst_cpp PRIVATE "-finstrument-functions-after-inlining")
elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "NVHPC")
    target_compile_options(std_thread_inst_cpp PRIVATE "-Minstrument")
endif()
target_link_libraries (std_thread_inst_cpp pthread)
add_dependencies (tests std_thread_inst_cpp)
add_test (NAME test_std_thread_inst_cpp COMMAND std_thread_inst_cpp)

add_executable(apex_std_thread_cpp apex_std_thread.cpp)
target_link_libraries (apex_std_thread_cpp ${LIBS})
add_dependencies (tests apex_std_thread_cpp)
add_test (NAME test_apex_std_thread_cpp COMMAND apex_std_thread_cpp)

add_executable(apex_deps_std_thread_cpp apex_deps_std_thread.cpp)
target_link_libraries (apex_deps_std_thread_cpp ${LIBS})
add_dependencies (tests apex_deps_std_thread_cpp)
add_test (NAME test_apex_deps_std_thread_cpp COMMAND apex_deps_std_thread_cpp)

